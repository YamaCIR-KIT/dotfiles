#!/bin/bash -eu

distribution="melodic"

export ROS_DISTRO=$distribution

if test -e /opt/ros/$distribution/setup.bash
then
  echo -n "[.rosrc1] auto-source /opt/ros/$distribution/setup.bash => "

  if source /opt/ros/$distribution/setup.bash
  then
    echo "success"
  else
    echo "failure"
  fi
fi

if test -e /var/tmp/mark/c
then
  # if test -e $(cat /var/tmp/mark/c)/devel/setup.bash
  # then
  #   source $(cat /var/tmp/mark/c)/devel/setup.bash
  # fi

  if test -e $(cat /var/tmp/mark/c)/install/setup.bash
  then
    source $(cat /var/tmp/mark/c)/install/setup.bash
  fi

  rospack profile &> /dev/null
fi

# make()
# {
#   if test -e $(pwd)/Makefile
#   then
#     command make $@
#   else
#     pushd $(cat /var/tmp/mark/c) && command catkin_make $@ && source devel/setup.bash
#     # rospack profile | sed -E "s/(.*)(\s\**\s)(.*)/\3/g" | grep -e "\/.*" | sort
#     rospack profile > /dev/null
#     popd
#   fi
# }

function recursive-wstool-update()
{
  pushd $(cat /var/tmp/mark/c)
  wstool init src

  echo "hoge" > /tmp/wstool_outputs

  while test "$(cat /tmp/wstool_outputs)" != "Merge caused no change, no new elements found"
  do
    find -regextype posix-basic -regex "\./src/.*/.*\.rosinstall" | xargs -n1 wstool merge --target-workspace=src | uniq | tee /tmp/wstool_outputs
    wstool update --target-workspace=src
  done

  rm /tmp/wstool_outputs
  popd
}

# function catkin-make-autoware()
# {
#   # CATKIN_OPTS="-DCMAKE_BUILD_TYPE=Release -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs install"
#   CATKIN_OPTS="-DCMAKE_BUILD_TYPE=Release install"
#
#   export LIBRARY_PATH=/usr/lib/OpenNI2/Drivers:$LIBRARY_PATH
#   catkin_make $CATKIN_OPTS $@
# }
#
# function colcon-build-autoware()
# {
#   COLCON_OPTS="--cmake-args -DCMAKE_BUILD_TYPE=Release"
#
#   colcon build $COLCON_OPTS $@
# }

function make-autoware()
{
  colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release \
               --catkin-skip-building-tests \
               --parallel-workers 4 \
               $@
}

# ==== For Autoware.IV =========================================================

eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

export PATH="/usr/local/cuda/bin:$PATH"
export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"
